     /*
     <div className='one'></div>
      <div className='two'></div>
      <div className='three'></div>

      
.one {
    background-color: blue;
    background-image: url('../images/profile.jpg');
    background-blend-mode: multiply;
  }
  
  .two {
    background-color: blue;
    background-image: url('../images/profile.jpg');
    background-blend-mode: screen;
  }
  
  .three {
    background-color: blue;
    background-image: url('../images/profile.jpg');
    background-blend-mode: overlay;
  }
*/

  // import { ReactComponent as WorkIcon } from "../images/work.svg";
// import { ReactComponent as SchoolIcon } from "../images/school.svg";

// import timelineElements from "./timeLineElements";

// import { VerticalTimeline, VerticalTimelineElement } from "react-vertical-timeline-component";
// import "react-vertical-timeline-component/style.min.css";

// import '../styles/education.css';
// import Quote from "./quote";

// const Education = () => {
//     let workIconStyles = { background: "#549bdd" };
//     let schoolIconStyles = { background: "#845d91" };

//     return (
//         <>
//             <div className="education-container">
//                 <div className="edu-heading">
//                     <h2>My Journey</h2>
//                     <p>2016 to 2023 my life shit</p>
//                 </div>
//                 <div className="timeline">
//                 <VerticalTimeline>
//                     {timelineElements.map((element) => {
//                         let isWorkIcon = element.icon === "work";

//                         return (
//                             <VerticalTimelineElement
//                                 key={element.key}
//                                 date={element.date}
//                                 dateClassName="date"
//                                 iconStyle={isWorkIcon ? workIconStyles : schoolIconStyles}
//                                 icon={isWorkIcon ? <WorkIcon /> : <SchoolIcon />}
//                             >
//                                 <h3 className="vertical-timeline-element-title">
//                                     {element.title}
//                                 </h3>
//                                 <h5 className="vertical-timeline-element-subtitle">
//                                     {element.location}
//                                 </h5>
//                                 <p id="description">{element.description}</p>
//                             </VerticalTimelineElement>
//                         );
//                     })}
//                 </VerticalTimeline>
//                 </div>
//             </div>
//             <Quote />
//         </>
//     );
// }

// export default Education;

/* .education-container {
  display: flex;
  height: 100%;
}

.edu-heading {
  flex: 1;
  display: flex;
  flex-direction: column;
  font-size: 2rem;
  text-align:left;
  padding-left: 10px;
  position: -webkit-sticky;
  position: sticky;
}

.edu-heading h2::first-letter {
  color: rgb(197, 103, 155);
}

h3 {
  padding-top: 0.25em;
}

.vertical-timeline-element-content {
  box-shadow: 0 0.25em 0.5em 0 rgba(0, 0, 0, 0.25),
    0 0.4em 1.25em 0 rgba(0, 0, 0, 0.15) !important;
  padding: 2em 3em !important;
}

.date {
  color: rgb(201, 251, 255);
}

#description {
  margin: 1.5em 0 2em 0;
}

.button {
  text-decoration: none;
  padding: 0.5em 1em;
  border-radius: 5px;
  color: white;
}

.workButton {
  background-color: #549bdd;
}

.workButton:hover {
  background-color: #c7ccd2;
}

.schoolButton {
  background-color: #845d91;
}

.schoolButton:hover {
  background-color: #c7ccd2;
}

@media only screen and (max-width: 1700px) {
  .vertical-timeline-element-date {
    display: block !important;
    float: none !important;
    color: rgb(44, 44, 44);
    margin-top: 1.5em;
  }
} */

/*


import React from 'react';
import Carousel from 'react-material-ui-carousel';
import { Paper, Button } from '@mui/material';
import projectElements from './projectElements';
import '../styles/projects.css';

const Project = () => {
    return (
        <div className='project-container'>
            <h1>Projects</h1>
            <Carousel
                className="carousel-container"
                animation="slide"
                timeout={500}
                indicatorIconButtonProps={{
                    style: {
                        fontSize: '12px',
                        padding: '10px',
                    },
                }}
                activeIndicatorIconButtonProps={{
                    style: {
                        fontSize: '14px',
                        color: '#007bff',
                        backgroundColor: 'red',
                    },
                }}
                indicatorContainerProps={{
                    style: {
                        marginTop: '50px',
                        textAlign: 'center',
                    },
                }}
            >
                {projectElements.map((item, i) => <Item key={i} item={item} />)}
            </Carousel>
        </div>
    );
};

function Item(props) {
    return (
        <div className="item-container">
            <Paper className="paper-container">
                <h2>{props.item.name}</h2>
                <p>{props.item.description}</p>
                <div className='btn-container'>
                    <Button className="CheckButton" onClick={() => window.open('https://github.com/your-username/your-repository', '_blank')}>
                        Check it out!
                    </Button>
                </div>
            </Paper>
        </div>
    );
}

export default Project;


.project-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.carousel-container {
    width: 100%;
    max-width: 600px;
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

h1 {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 10px;
}

.button-container {
    justify-content: center;
    display: flex;
}

.item-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
}

.paper-container {
    padding: 20px;
    height: 100%;
    width: 100%;
}

*/

/*img slider 
import React, { useState } from "react";
import { FaArrowLeft, FaArrowRight } from 'react-icons/fa';

const ImageSlider = ({ slides }) => {
    const [currentIndex, setCurrentIndex] = useState(0);

    const sliderStyles = {
        height: "100%",
        position: "relative",
    };
    const slideStyles = {
        width: '100%',
        height: '100%',
        borderRadius: '10px',
        backgroundSize: "cover",
        backgroundImage: `url(${slides[currentIndex].image})`,
    };
    const arrowStyles = {
        position: "absolute",
        top: '50%',
        transform: 'translateY(-50%)',
        fontSize: '45px',
        color: '#fff',
        zIndex: 1,
        cursor: 'pointer'
    };
    const leftArrow = {
        ...arrowStyles,
        left: '32px',
    };
    const rightArrow = {
        ...arrowStyles,
        right: '32px',
    };

    const goPrev = () => {
        const isFirstSlide = currentIndex === 0;
        const newIndex = isFirstSlide ? slides.length - 1 : currentIndex - 1;
        setCurrentIndex(newIndex);
    };

    const goNext = () => {
        const isLastSlide = currentIndex === slides.length - 1;
        const newIndex = isLastSlide ? 0 : currentIndex + 1;
        setCurrentIndex(newIndex);
    };

    return (
        <div style={sliderStyles}>
            <div style={leftArrow} onClick={goPrev}>
                <FaArrowLeft />
            </div>
            <div style={rightArrow} onClick={goNext}>
                <FaArrowRight />
            </div>
            <div style={slideStyles}></div>
        </div>
    );
};

export default ImageSlider;
*/

    // gsap.registerPlugin(ScrollTrigger);

    // useEffect(() => {
    //     const wrapper = document.querySelector('.project__single__image-wrapper');
    //     const image = document.querySelector('.project__single__image');
    //     const tl = gsap.timeline({
    //         scrollTrigger: {
    //             trigger: image,
    //             start: 'top bottom',
    //             toggleActions: "restart none none reset"
    //         }
    //     })

    //     tl.to(wrapper, {
    //         ease: "power2",
    //         duration: 2,
    //         clipPath: "polygon(0 0, 100% 0, 100% 100%, 0 100%)"
    //     })
    //     tl.to(image, {
    //         duration: 2,
    //         scale: 1
    //     }, "<")
    // });